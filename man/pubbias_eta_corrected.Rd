% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/eta_corrected.R
\name{pubbias_eta_corrected}
\alias{pubbias_eta_corrected}
\alias{corrected_meta}
\title{Estimate publication bias-corrected meta-analysis}
\usage{
pubbias_eta_corrected(
  yi,
  vi,
  sei,
  eta,
  clustervar = 1:length(yi),
  model,
  selection_tails = 1,
  favor_positive,
  alpha_select = 0.05,
  ci_level = 0.95,
  small = TRUE
)

corrected_meta(
  yi,
  vi,
  eta,
  clustervar = 1:length(yi),
  model,
  selection.tails = 1,
  favor.positive,
  alpha.select = 0.05,
  CI.level = 0.95,
  small = TRUE
)
}
\arguments{
\item{yi}{A vector of point estimates to be meta-analyzed.}

\item{vi}{A vector of estimated variances for the point estimates.}

\item{sei}{A vector of estimated standard errors for the point estimates
(only relevant when not using \code{vi}).}

\item{eta}{The number of times more likely an affirmative study is to be
published than a nonaffirmative study; see Details.}

\item{clustervar}{A character, factor, or numeric vector with the same length
as yi. Unique values should indicate unique clusters of point estimates. By
default, assumes all point estimates are independent.}

\item{model}{"fixed" for fixed-effects (a.k.a. "common-effect") or "robust"
for robust random-effects.}

\item{selection_tails}{1 (for one-tailed selection, recommended for its
conservatism) or 2 (for two-tailed selection).}

\item{favor_positive}{\code{TRUE} if publication bias is assumed to favor
positive estimates; \code{FALSE} if assumed to favor negative estimates;
see Details.}

\item{alpha_select}{Alpha-level at which publication probability is assumed
to change.}

\item{ci_level}{Confidence interval level (as proportion) for the corrected
point estimate. (The alpha level for inference on the corrected point
estimate will be calculated from \code{ci_level}.)}

\item{small}{Should inference allow for a small meta-analysis? We recommend
always using \code{TRUE}.}

\item{selection.tails}{(deprecated) see selection_tails}

\item{favor.positive}{(deprecated) see favor_positive}

\item{alpha.select}{(deprecated) see alpha_select}

\item{CI.level}{(deprecated) see ci_level}
}
\value{
A list with three elements, \code{values}, \code{stats} and
  \code{fit}. Stats is a list that contains the bias-corrected pooled point
  estimate (\code{estimate}) and inference on the bias-corrected estimate
  (\code{se}, \code{ci_lower}, \code{ci_upper}, \code{p_value}). Values is a
  list that contains the user's specified \code{eta}, the number of
  affirmative and nonaffirmative studies (\code{k_affirmative} and
  \code{k_nonaffirmative}), and a dataframe combining \code{yi}, \code{vi},
  \code{clustervar}.
}
\description{
For a chosen ratio of publication probabilities, \code{eta}, estimates a
publication bias-corrected pooled point estimate and confidence interval per
Mathur & VanderWeele (2020). Model options include fixed-effects (a.k.a.
"common-effect"), robust independent, and robust clustered specifications.
}
\details{
The ratio \code{eta} represents the number of times more likely
  affirmative studies (i.e., those with a "statistically significant" and
  positive estimate) are to be published than nonaffirmative studies (i.e.,
  those with a "nonsignificant" or negative estimate).

  If \code{favor_positive == FALSE}, such that publication bias is assumed to
  favor negative rather than positive estimates, the signs of \code{yi} will
  be reversed prior to performing analyses. The corrected estimate will be
  reported based on the recoded signs rather than the original sign
  convention.
}
\examples{
 # calculate effect sizes from example dataset in metafor
 require(metafor)
 dat = metafor::escalc(measure = "RR", ai = tpos, bi = tneg, ci = cpos,
                       di = cneg, data = dat.bcg)

 # first fit fixed-effects model without any bias correction
 # since the point estimate is negative here, we'll assume publication bias
 # favors negative log-RRs rather than positive ones
 metafor::rma( yi, vi, data = dat, method = "FE" )

 # warmup
 # note that passing eta = 1 (no publication bias) yields the naive point
 # estimate from rma above, which makes sense
 pubbias_eta_corrected( yi = dat$yi,
                        vi = dat$vi,
                        eta = 1,
                        model = "fixed",
                        favor_positive = FALSE )

 # assume a known selection ratio of 5
 # i.e., affirmative results are 5x more likely to be published than
 # nonaffirmative ones
 pubbias_eta_corrected( yi = dat$yi,
                        vi = dat$vi,
                        eta = 5,
                        favor_positive = FALSE,
                        model = "fixed" )

 # same selection ratio, but now account for heterogeneity and clustering via
 # robust specification
 pubbias_eta_corrected( yi = dat$yi,
                        vi = dat$vi,
                        eta = 5,
                        favor_positive = FALSE,
                        clustervar = dat$author,
                        model = "robust" )

 ##### Make sensitivity plot as in Mathur & VanderWeele (2020) #####
 # range of parameters to try (more dense at the very small ones)
 etas = c( 200, 150, 100, 50, 40, 30, 20, seq(15, 1) )

 # compute estimate for each value of eta
 estimates = lapply(etas, function(e) {
   pubbias_eta_corrected( yi = dat$yi, vi = dat$vi, eta = e, model = "robust",
                          clustervar = dat$author, favor_positive = FALSE )$stats
 })
 estimates = dplyr::bind_rows(estimates)
 estimates$eta = etas

 require(ggplot2)
 ggplot( estimates, aes( x = eta, y = estimate ) ) +
   geom_ribbon( aes( ymin = ci_lower, ymax = ci_upper ), fill = "gray" ) +
   geom_line( lwd = 1.2 ) +
   labs( x = bquote( eta ), y = bquote( hat(mu)[eta] ) ) +
   theme_classic()
}
\references{
Mathur MB & VanderWeele TJ (2020). Sensitivity analysis for
  publication bias in meta-analyses. \emph{Journal of the Royal Statistical
  Society, Series C.} Preprint available at https://osf.io/s9dp6/.
}
