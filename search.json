[{"path":"https://mayamathur.github.io/PublicationBias/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mika Braginsky. Author, maintainer. Maya Mathur. Author. Tyler J. VanderWeele. Author.","code":""},{"path":"https://mayamathur.github.io/PublicationBias/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Braginsky M, Mathur M, VanderWeele T (2023). PublicationBias: Sensitivity Analysis Publication Bias Meta-Analyses. https://github.com/mayamathur/PublicationBias, https://mayamathur.github.io/PublicationBias/.","code":"@Manual{,   title = {PublicationBias: Sensitivity Analysis for Publication Bias in Meta-Analyses},   author = {Mika Braginsky and Maya Mathur and Tyler J. VanderWeele},   year = {2023},   note = {https://github.com/mayamathur/PublicationBias, https://mayamathur.github.io/PublicationBias/}, }"},{"path":"https://mayamathur.github.io/PublicationBias/index.html","id":"publicationbias","dir":"","previous_headings":"","what":"Sensitivity Analysis for Publication Bias in Meta-Analyses","title":"Sensitivity Analysis for Publication Bias in Meta-Analyses","text":"PublicationBias R package provides bias correction sensitivity analysis publication bias meta-analyses (per Mathur & VanderWeele, 2020).","code":""},{"path":"https://mayamathur.github.io/PublicationBias/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Sensitivity Analysis for Publication Bias in Meta-Analyses","text":"can install PublicationBias CRAN : can install development version PublicationBias GitHub :","code":"install.packages(\"PublicationBias\") # install.packages(\"devtools\") devtools::install_github(\"mayamathur/PublicationBias\")"},{"path":"https://mayamathur.github.io/PublicationBias/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Sensitivity Analysis for Publication Bias in Meta-Analyses","text":"Start generating example data metafor package. Calculate meta-analytic effect size estimate, correcting assumed selection ratio 5 (.e., affirmative results 5x likely published nonaffirmative ones). Calculate high selection ratio need attenuate effect size estimate null.","code":"library(PublicationBias) dat <- metafor::escalc(measure = \"RR\", ai = tpos, bi = tneg, ci = cpos,                        di = cneg, data = dat.bcg) pubbias_meta(yi = dat$yi, vi = dat$vi, selection_ratio = 5,              model_type = \"fixed\", favor_positive = FALSE) pubbias_svalue(yi = dat$yi, vi = dat$vi, q = 0,                model_type = \"fixed\", favor_positive = FALSE)"},{"path":"https://mayamathur.github.io/PublicationBias/reference/PublicationBias-package.html","id":null,"dir":"Reference","previous_headings":"","what":"PublicationBias: Sensitivity Analysis for Publication Bias in Meta-Analyses — PublicationBias-package","title":"PublicationBias: Sensitivity Analysis for Publication Bias in Meta-Analyses — PublicationBias-package","text":"Performs sensitivity analysis publication bias meta-analyses (per Mathur & VanderWeele, 2020 [doi:10.31219/osf.io/s9dp6 ]). analyses enable statements : \"publication bias shift observed point estimate null, 'significant' results need least 30-fold likely published negative 'nonsignificant' results.\" Comparable statements can made regarding shifting chosen non-null value shifting confidence interval. Provides worst-case meta-analytic point estimate maximal publication bias obtained simply conducting standard meta-analysis negative \"nonsignificant\" studies.","code":""},{"path":"https://mayamathur.github.io/PublicationBias/reference/PublicationBias-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"PublicationBias: Sensitivity Analysis for Publication Bias in Meta-Analyses — PublicationBias-package","text":"Mathur MB, VanderWeele TJ (2020). “Sensitivity analysis publication bias meta-analyses.” Journal Royal Statistical Society: Series C (Applied Statistics), 69(5), 1091--1119.","code":""},{"path":[]},{"path":"https://mayamathur.github.io/PublicationBias/reference/PublicationBias-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"PublicationBias: Sensitivity Analysis for Publication Bias in Meta-Analyses — PublicationBias-package","text":"Maintainer: Mika Braginsky mika.br@gmail.com Authors: Maya Mathur mmathur@stanford.edu Tyler J. VanderWeele tvanderw@hsph.harvard.edu","code":""},{"path":"https://mayamathur.github.io/PublicationBias/reference/pubbias_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate publication bias-corrected meta-analysis — pubbias_meta","title":"Estimate publication bias-corrected meta-analysis — pubbias_meta","text":"chosen ratio publication probabilities, selection_ratio, estimates publication bias-corrected pooled point estimate confidence interval per Mathur VanderWeele (2020) . Model options include fixed-effects (.k.. \"common-effect\"), robust independent, robust clustered specifications.","code":""},{"path":"https://mayamathur.github.io/PublicationBias/reference/pubbias_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate publication bias-corrected meta-analysis — pubbias_meta","text":"","code":"pubbias_meta(   yi,   vi,   sei,   cluster = 1:length(yi),   selection_ratio,   selection_tails = 1,   model_type = \"robust\",   favor_positive = TRUE,   alpha_select = 0.05,   ci_level = 0.95,   small = TRUE,   return_worst_meta = FALSE )  corrected_meta(   yi,   vi,   eta,   clustervar = 1:length(yi),   model,   selection.tails = 1,   favor.positive,   alpha.select = 0.05,   CI.level = 0.95,   small = TRUE )"},{"path":"https://mayamathur.github.io/PublicationBias/reference/pubbias_meta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate publication bias-corrected meta-analysis — pubbias_meta","text":"yi vector point estimates meta-analyzed. vi vector estimated variances (.e., squared standard errors) point estimates. sei vector estimated standard errors point estimates. (one vi sei needs specified). cluster Vector length number rows data, indicating cluster study considered part (defaults treating studies independent; .e., study cluster). selection_ratio Ratio publication bias favors affirmative studies (.e., studies p-values less alpha_select estimates direction indicated favor_positive). selection_tails 1 (one-tailed selection, recommended conservatism) 2 (two-tailed selection). model_type \"fixed\" fixed-effects (.k.. \"common-effect\") \"robust\" robust random-effects. favor_positive TRUE publication bias assumed favor significant positive estimates; FALSE assumed favor significant negative estimates. alpha_select Alpha level estimate's probability favored publication bias assumed change (.e., threshold study investigators, journal editors, etc., consider estimate significant). ci_level Confidence interval level (proportion) corrected point estimate. (alpha level inference corrected point estimate calculated ci_level.) small inference allow small meta-analysis? recommend always using TRUE. return_worst_meta worst-case meta-analysis nonaffirmative studies returned? eta (deprecated) see selection_ratio clustervar (deprecated) see cluster model (deprecated) see model_type selection.tails (deprecated) see selection_tails favor.positive (deprecated) see favor_positive alpha.select (deprecated) see alpha_select CI.level (deprecated) see ci_level","code":""},{"path":"https://mayamathur.github.io/PublicationBias/reference/pubbias_meta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate publication bias-corrected meta-analysis — pubbias_meta","text":"object class metabias::metabias(), list containing: data tibble one row per study columns yi, yif, vi, affirm, cluster. values list elements selection_ratio, selection_tails, model_type, favor_positive, alpha_select, ci_level, small, k, k_affirmative, k_nonaffirmative. stats tibble columns model, estimate, se, ci_lower, ci_upper, p_value. fit list fitted models, .","code":""},{"path":"https://mayamathur.github.io/PublicationBias/reference/pubbias_meta.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate publication bias-corrected meta-analysis — pubbias_meta","text":"selection_ratio represents number times likely affirmative studies (.e., \"statistically significant\" positive estimate) published nonaffirmative studies (.e., \"nonsignificant\" negative estimate). favor_positive FALSE, publication bias assumed favor negative rather positive estimates, signs yi reversed prior performing analyses. corrected estimate reported based recoded signs rather original sign convention.","code":""},{"path":"https://mayamathur.github.io/PublicationBias/reference/pubbias_meta.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimate publication bias-corrected meta-analysis — pubbias_meta","text":"Mathur MB, VanderWeele TJ (2020). “Sensitivity analysis publication bias meta-analyses.” Journal Royal Statistical Society: Series C (Applied Statistics), 69(5), 1091--1119.","code":""},{"path":"https://mayamathur.github.io/PublicationBias/reference/pubbias_meta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate publication bias-corrected meta-analysis — pubbias_meta","text":"","code":"# calculate effect sizes from example dataset in metafor require(metafor) #> Loading required package: metafor #> Loading required package: Matrix #> Loading required package: metadat #>  #> Loading the 'metafor' package (version 3.8-1). For an #> introduction to the package please type: help(metafor) dat <- metafor::escalc(measure = \"RR\", ai = tpos, bi = tneg, ci = cpos,                        di = cneg, data = dat.bcg)  # first fit fixed-effects model without any bias correction # since the point estimate is negative here, we'll assume publication bias # favors negative log-RRs rather than positive ones metafor::rma(yi, vi, data = dat, method = \"FE\") #>  #> Fixed-Effects Model (k = 13) #>  #> I^2 (total heterogeneity / total variability):   92.12% #> H^2 (total variability / sampling variability):  12.69 #>  #> Test for Heterogeneity: #> Q(df = 12) = 152.2330, p-val < .0001 #>  #> Model Results: #>  #> estimate      se      zval    pval    ci.lb    ci.ub       #>  -0.4303  0.0405  -10.6247  <.0001  -0.5097  -0.3509  ***  #>  #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>   # warmup # note that passing selection_ratio = 1 (no publication bias) yields the naive # point estimate from rma above, which makes sense pubbias_meta(yi = dat$yi,              vi = dat$vi,              selection_ratio = 1,              model_type = \"fixed\",              favor_positive = FALSE) #> $data #> # A tibble: 13 × 5 #>         yi     yif      vi affirm cluster #>      <dbl>   <dbl>   <dbl> <lgl>    <int> #>  1 -0.889   0.889  0.326   FALSE        1 #>  2 -1.59    1.59   0.195   TRUE         2 #>  3 -1.35    1.35   0.415   TRUE         3 #>  4 -1.44    1.44   0.0200  TRUE         4 #>  5 -0.218   0.218  0.0512  FALSE        5 #>  6 -0.786   0.786  0.00691 TRUE         6 #>  7 -1.62    1.62   0.223   TRUE         7 #>  8  0.0120 -0.0120 0.00396 FALSE        8 #>  9 -0.469   0.469  0.0564  TRUE         9 #> 10 -1.37    1.37   0.0730  TRUE        10 #> 11 -0.339   0.339  0.0124  TRUE        11 #> 12  0.446  -0.446  0.533   FALSE       12 #> 13 -0.0173  0.0173 0.0714  FALSE       13 #>  #> $values #> $values$selection_ratio #> [1] 1 #>  #> $values$selection_tails #> [1] 1 #>  #> $values$model_type #> [1] \"fixed\" #>  #> $values$favor_positive #> [1] FALSE #>  #> $values$alpha_select #> [1] 0.05 #>  #> $values$ci_level #> [1] 0.95 #>  #> $values$small #> [1] TRUE #>  #> $values$k #> [1] 13 #>  #> $values$k_affirmative #> [1] 8 #>  #> $values$k_nonaffirmative #> [1] 5 #>  #>  #> $stats #> # A tibble: 1 × 6 #>   model   estimate     se ci_lower ci_upper     p_value #>   <chr>      <dbl>  <dbl>    <dbl>    <dbl>       <dbl> #> 1 pubbias   -0.430 0.0405   -0.519   -0.342 0.000000185 #>  #> $fits #> list() #>  #> attr(,\"class\") #> [1] \"metabias\" \"list\"      # assume a known selection ratio of 5 # i.e., affirmative results are 5x more likely to be published than # nonaffirmative ones pubbias_meta(yi = dat$yi,              vi = dat$vi,              selection_ratio = 5,              model_type = \"fixed\",              favor_positive = FALSE) #> $data #> # A tibble: 13 × 5 #>         yi     yif      vi affirm cluster #>      <dbl>   <dbl>   <dbl> <lgl>    <int> #>  1 -0.889   0.889  0.326   FALSE        1 #>  2 -1.59    1.59   0.195   TRUE         2 #>  3 -1.35    1.35   0.415   TRUE         3 #>  4 -1.44    1.44   0.0200  TRUE         4 #>  5 -0.218   0.218  0.0512  FALSE        5 #>  6 -0.786   0.786  0.00691 TRUE         6 #>  7 -1.62    1.62   0.223   TRUE         7 #>  8  0.0120 -0.0120 0.00396 FALSE        8 #>  9 -0.469   0.469  0.0564  TRUE         9 #> 10 -1.37    1.37   0.0730  TRUE        10 #> 11 -0.339   0.339  0.0124  TRUE        11 #> 12  0.446  -0.446  0.533   FALSE       12 #> 13 -0.0173  0.0173 0.0714  FALSE       13 #>  #> $values #> $values$selection_ratio #> [1] 5 #>  #> $values$selection_tails #> [1] 1 #>  #> $values$model_type #> [1] \"fixed\" #>  #> $values$favor_positive #> [1] FALSE #>  #> $values$alpha_select #> [1] 0.05 #>  #> $values$ci_level #> [1] 0.95 #>  #> $values$small #> [1] TRUE #>  #> $values$k #> [1] 13 #>  #> $values$k_affirmative #> [1] 8 #>  #> $values$k_nonaffirmative #> [1] 5 #>  #>  #> $stats #> # A tibble: 1 × 6 #>   model   estimate     se ci_lower ci_upper p_value #>   <chr>      <dbl>  <dbl>    <dbl>    <dbl>   <dbl> #> 1 pubbias   -0.156 0.0491   -0.263  -0.0485 0.00814 #>  #> $fits #> list() #>  #> attr(,\"class\") #> [1] \"metabias\" \"list\"      # same selection ratio, but now account for heterogeneity and clustering via # robust specification pubbias_meta(yi = dat$yi,              vi = dat$vi,              cluster = dat$author,              selection_ratio = 5,              model_type = \"robust\",              favor_positive = FALSE) #> $data #> # A tibble: 13 × 5 #>         yi     yif      vi affirm cluster              #>      <dbl>   <dbl>   <dbl> <lgl>  <chr>                #>  1 -0.889   0.889  0.326   FALSE  Aronson              #>  2 -1.59    1.59   0.195   TRUE   Ferguson & Simes     #>  3 -1.35    1.35   0.415   TRUE   Rosenthal et al      #>  4 -1.44    1.44   0.0200  TRUE   Hart & Sutherland    #>  5 -0.218   0.218  0.0512  FALSE  Frimodt-Moller et al #>  6 -0.786   0.786  0.00691 TRUE   Stein & Aronson      #>  7 -1.62    1.62   0.223   TRUE   Vandiviere et al     #>  8  0.0120 -0.0120 0.00396 FALSE  TPT Madras           #>  9 -0.469   0.469  0.0564  TRUE   Coetzee & Berjak     #> 10 -1.37    1.37   0.0730  TRUE   Rosenthal et al      #> 11 -0.339   0.339  0.0124  TRUE   Comstock et al       #> 12  0.446  -0.446  0.533   FALSE  Comstock & Webster   #> 13 -0.0173  0.0173 0.0714  FALSE  Comstock et al       #>  #> $values #> $values$selection_ratio #> [1] 5 #>  #> $values$selection_tails #> [1] 1 #>  #> $values$model_type #> [1] \"robust\" #>  #> $values$favor_positive #> [1] FALSE #>  #> $values$alpha_select #> [1] 0.05 #>  #> $values$ci_level #> [1] 0.95 #>  #> $values$small #> [1] TRUE #>  #> $values$k #> [1] 13 #>  #> $values$k_affirmative #> [1] 8 #>  #> $values$k_nonaffirmative #> [1] 5 #>  #>  #> $stats #>     model   estimate        se   ci_lower   ci_upper    p_value #> 1 pubbias -0.3686171 0.1452243 -0.7849406 0.04770646 0.06905043 #>  #> $fits #> $fits$robust #> RVE: User Specified Weights with Small-Sample Corrections  #>  #> Model: yi ~ 1  #>  #> Number of studies = 11  #> Number of outcomes = 13 (min = 1 , mean = 1.18 , median = 1 , max = 2 ) #>                Estimate StdErr t-value dfs P(|t|>) 95% CI.L 95% CI.U Sig #> 1 X.Intercept.   -0.369  0.145   -2.54 3.7  0.0691   -0.785   0.0477   * #> --- #> Signif. codes: < .01 *** < .05 ** < .10 * #> --- #> Note: If df < 4, do not trust the results #>  #> attr(,\"class\") #> [1] \"metabias\" \"list\"      ##### Make sensitivity plot as in Mathur & VanderWeele (2020) ##### # range of parameters to try (more dense at the very small ones) selection_ratios <- c(200, 150, 100, 50, 40, 30, 20, seq(15, 1))  # compute estimate for each value of selection_ratio estimates <- lapply(selection_ratios, function(e) {   pubbias_meta(yi = dat$yi, vi = dat$vi, cluster = dat$author,                selection_ratio = e, model_type = \"robust\",                favor_positive = FALSE)$stats }) estimates <- dplyr::bind_rows(estimates) estimates$selection_ratio <- selection_ratios  require(ggplot2) #> Loading required package: ggplot2 ggplot(estimates, aes(x = selection_ratio, y = estimate)) +   geom_ribbon(aes(ymin = ci_lower, ymax = ci_upper), fill = \"gray\") +   geom_line(lwd = 1.2) +   labs(x = bquote(eta), y = bquote(hat(mu)[eta])) +   theme_classic() #> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. #> ℹ Please use `linewidth` instead."},{"path":"https://mayamathur.github.io/PublicationBias/reference/pubbias_svalue.html","id":null,"dir":"Reference","previous_headings":"","what":"Severity of publication bias needed to ","title":"Severity of publication bias needed to ","text":"Estimates S-value, defined severity publication bias (.e., ratio affirmative studies likely published nonaffirmative studies) required shift pooled point estimate confidence interval limit value q.","code":""},{"path":"https://mayamathur.github.io/PublicationBias/reference/pubbias_svalue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Severity of publication bias needed to ","text":"","code":"pubbias_svalue(   yi,   vi,   sei,   cluster = 1:length(yi),   q = 0,   model_type = \"robust\",   favor_positive = TRUE,   alpha_select = 0.05,   ci_level = 0.95,   small = TRUE,   selection_ratio_max = 200,   return_worst_meta = FALSE )  svalue(   yi,   vi,   q,   clustervar = 1:length(yi),   model,   alpha.select = 0.05,   eta.grid.hi = 200,   favor.positive,   CI.level = 0.95,   small = TRUE,   return.worst.meta = FALSE )"},{"path":"https://mayamathur.github.io/PublicationBias/reference/pubbias_svalue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Severity of publication bias needed to ","text":"yi vector point estimates meta-analyzed. vi vector estimated variances (.e., squared standard errors) point estimates. sei vector estimated standard errors point estimates. (one vi sei needs specified). cluster Vector length number rows data, indicating cluster study considered part (defaults treating studies independent; .e., study cluster). q attenuated value shift point estimate CI. specified scale yi (e.g., yi log-RR scale, q well). model_type \"fixed\" fixed-effects (.k.. \"common-effect\") \"robust\" robust random-effects. favor_positive TRUE publication bias assumed favor significant positive estimates; FALSE assumed favor significant negative estimates. alpha_select Alpha level estimate's probability favored publication bias assumed change (.e., threshold study investigators, journal editors, etc., consider estimate significant). ci_level Confidence interval level (proportion) corrected point estimate. (alpha level inference corrected point estimate calculated ci_level.) small inference allow small meta-analysis? recommend always using TRUE. selection_ratio_max largest value selection_ratio included grid search. argument needed model_type = \"robust\". return_worst_meta worst-case meta-analysis nonaffirmative studies returned? clustervar (deprecated) see cluster model (deprecated) see model_type alpha.select (deprecated) see alpha_select eta.grid.hi (deprecated) see selection_ratio_max favor.positive (deprecated) see favor_positive CI.level (deprecated) see ci_level return.worst.meta (deprecated) see return_worst_meta","code":""},{"path":"https://mayamathur.github.io/PublicationBias/reference/pubbias_svalue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Severity of publication bias needed to ","text":"object class metabias::metabias(), list containing: data tibble one row per study columns yi, yif, vi, affirm, cluster. values list elements selection_ratio, selection_tails, model_type, favor_positive, alpha_select, ci_level, small, k, k_affirmative, k_nonaffirmative. stats tibble columns model, estimate, se, ci_lower, ci_upper, p_value. sval_est represents amount publication bias required attenuate pooled point estimate q; sval_ci represents amount publication bias required attenuate confidence interval limit pooled point estimate q. fit list fitted models, .","code":""},{"path":"https://mayamathur.github.io/PublicationBias/reference/pubbias_svalue.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Severity of publication bias needed to ","text":"illustrate interpretation S-value, S-value point estimate 30 q=0, indicates affirmative studies (.e., \"statistically significant\" positive estimate) need 30-fold likely published nonaffirmative studies (.e., \"nonsignificant\" negative estimate) attenuate pooled point estimate q. favor_positive = FALSE, publication bias assumed favor negative rather positive estimates, signs yi reversed prior performing analyses. returned number affirmative nonaffirmative studies reflect recoded signs. return_worst_meta = TRUE, also returns worst-case meta-analysis nonaffirmative studies. model_type = \"fixed\", worst-case meta-analysis fit metafor::rma.uni(). model_type = \"robust\", fit robumeta::robu(). Note latter case, custom inverse-variance weights used, inverse sum study's variance heterogeneity estimate naive random-effects meta-analysis (Mathur & VanderWeele, 2020). done consistency results pubbias_meta(), used determine sval_est sval_ci. Therefore, worst-case meta-analysis results may differ slightly obtain simply fit robumeta::robu() nonaffirmative studies default weights.","code":""},{"path":"https://mayamathur.github.io/PublicationBias/reference/pubbias_svalue.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Severity of publication bias needed to ","text":"Mathur MB, VanderWeele TJ (2020). “Sensitivity analysis publication bias meta-analyses.” Journal Royal Statistical Society: Series C (Applied Statistics), 69(5), 1091--1119.","code":""},{"path":"https://mayamathur.github.io/PublicationBias/reference/pubbias_svalue.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Severity of publication bias needed to ","text":"","code":"# calculate effect sizes from example dataset in metafor require(metafor) dat <- metafor::escalc(measure = \"RR\", ai = tpos, bi = tneg, ci = cpos,                        di = cneg, data = dat.bcg)  ##### Fixed-Effects Specification ##### # S-values and worst-case meta-analysis under fixed-effects specification svals_fixed_0 <- pubbias_svalue(yi = dat$yi,                                 vi = dat$vi,                                 q = 0,                                 model_type = \"fixed\",                                 favor_positive = FALSE)  # publication bias required to shift point estimate to 0 svals_fixed_0$stats$sval_est #> [1] -76.90313  # and to shift CI to include 0 svals_fixed_0$stats$sval_ci #> [1] 7.58431  # now try shifting to a nonzero value (RR = 0.90) svals_fixed_q <- pubbias_svalue(yi = dat$yi,                                 vi = dat$vi,                                 q = log(.9),                                 model_type = \"fixed\",                                 favor_positive = FALSE)  # publication bias required to shift point estimate to RR = 0.90 svals_fixed_q$stats$sval_est #> [1] 8.261336  # and to shift CI to RR = 0.90 svals_fixed_q$stats$sval_ci #> [1] 3.406779  ##### Robust Clustered Specification ##### pubbias_svalue(yi = dat$yi,                vi = dat$vi,                q = 0,                model_type = \"robust\",                favor_positive = FALSE) #> $data #>             yi          vi affirm cluster #> 1   0.88931133 0.325584765  FALSE       1 #> 2   1.58538866 0.194581121   TRUE       2 #> 3   1.34807315 0.415367965   TRUE       3 #> 4   1.44155119 0.020010032   TRUE       4 #> 5   0.21754732 0.051210172  FALSE       5 #> 6   0.78611559 0.006905618   TRUE       6 #> 7   1.62089822 0.223017248   TRUE       7 #> 8  -0.01195233 0.003961579  FALSE       8 #> 9   0.46941765 0.056434210   TRUE       9 #> 10  1.37134480 0.073024794   TRUE      10 #> 11  0.33935883 0.012412214   TRUE      11 #> 12 -0.44591340 0.532505845  FALSE      12 #> 13  0.01731395 0.071404660  FALSE      13 #>  #> $values #> $values$q #> [1] 0 #>  #> $values$model_type #> [1] \"robust\" #>  #> $values$favor_positive #> [1] FALSE #>  #> $values$alpha_select #> [1] 0.05 #>  #> $values$ci_level #> [1] 0.95 #>  #> $values$small #> [1] TRUE #>  #> $values$selection_ratio_max #> [1] 200 #>  #> $values$k #> [1] 13 #>  #> $values$k_affirmative #> [1] 8 #>  #> $values$k_nonaffirmative #> [1] 5 #>  #>  #> $stats #> # A tibble: 1 × 2 #>   sval_est     sval_ci #>   <chr>          <dbl> #> 1 Not possible    4.17 #>  #> $fits #> list() #>  #> attr(,\"class\") #> [1] \"metabias\" \"list\""},{"path":"https://mayamathur.github.io/PublicationBias/reference/pval_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot one-tailed p-values — pval_plot","title":"Plot one-tailed p-values — pval_plot","text":"Plots one-tailed p-values. leftmost red line indicates cutoff one-tailed p-values less 0.025 (corresponding \"affirmative\" studies; .e., positive point estimate two-tailed p-value less 0.05). rightmost red line indicates one-tailed p-values greater 0.975 (.e., studies negative point estimate two-tailed p-value less 0.05). substantial point mass p-values right rightmost red line, suggests selection may two-tailed rather one-tailed.","code":""},{"path":"https://mayamathur.github.io/PublicationBias/reference/pval_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot one-tailed p-values — pval_plot","text":"","code":"pval_plot(yi, vi, sei, alpha_select = 0.05)"},{"path":"https://mayamathur.github.io/PublicationBias/reference/pval_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot one-tailed p-values — pval_plot","text":"yi vector point estimates meta-analyzed. signs estimates chosen publication bias assumed operate favor positive estimates. vi vector estimated variances (.e., squared standard errors) point estimates. sei vector estimated standard errors point estimates. (one vi sei needs specified). alpha_select Alpha level estimate's probability favored publication bias assumed change (.e., threshold study investigators, journal editors, etc., consider estimate significant).","code":""},{"path":"https://mayamathur.github.io/PublicationBias/reference/pval_plot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plot one-tailed p-values — pval_plot","text":"Mathur MB, VanderWeele TJ (2020). “Sensitivity analysis publication bias meta-analyses.” Journal Royal Statistical Society: Series C (Applied Statistics), 69(5), 1091--1119.","code":""},{"path":"https://mayamathur.github.io/PublicationBias/reference/pval_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot one-tailed p-values — pval_plot","text":"","code":"# compute meta-analytic effect sizes require(metafor) dat <- metafor::escalc(measure = \"RR\", ai = tpos, bi = tneg, ci = cpos,                        di = cneg, data = dat.bcg)  # flip signs since we think publication bias favors negative effects dat$yi <- -dat$yi  pval_plot(yi = dat$yi, vi = dat$vi)"},{"path":"https://mayamathur.github.io/PublicationBias/reference/significance_funnel.html","id":null,"dir":"Reference","previous_headings":"","what":"Make significance funnel plot — significance_funnel","title":"Make significance funnel plot — significance_funnel","text":"Creates modified funnel plot distinguishes affirmative nonaffirmative studies, helping detect extent nonaffirmative studies' point estimates systematically smaller entire set point estimates. estimate among nonaffirmative studies (gray diamond) represents corrected estimate worst-case publication bias. gray diamond represents negligible effect size much smaller pooled estimate among studies (black diamond), suggests meta-analysis may robust extreme publication bias. Numerical sensitivity analyses (via pubbias_svalue()) still carried precise quantitative conclusions.","code":""},{"path":"https://mayamathur.github.io/PublicationBias/reference/significance_funnel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make significance funnel plot — significance_funnel","text":"","code":"significance_funnel(   yi,   vi,   sei,   favor_positive = TRUE,   alpha_select = 0.05,   plot_pooled = TRUE,   est_all = NA,   est_worst = NA,   xmin = min(yi),   xmax = max(yi),   ymin = 0,   ymax = max(sqrt(vi)),   xlab = \"Point estimate\",   ylab = \"Estimated standard error\" )"},{"path":"https://mayamathur.github.io/PublicationBias/reference/significance_funnel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make significance funnel plot — significance_funnel","text":"yi vector point estimates meta-analyzed. vi vector estimated variances (.e., squared standard errors) point estimates. sei vector estimated standard errors point estimates. (one vi sei needs specified). favor_positive TRUE publication bias assumed favor significant positive estimates; FALSE assumed favor significant negative estimates. alpha_select Alpha level estimate's probability favored publication bias assumed change (.e., threshold study investigators, journal editors, etc., consider estimate significant). plot_pooled pooled estimates within studies within nonaffirmative studies plotted well? est_all Regular meta-analytic estimate among studies (optional). est_worst Worst-case meta-analytic estimate among nonaffirmative studies (optional). xmin x-axis (point estimate) lower limit plot. xmax x-axis (point estimate) upper limit plot. ymin y-axis (standard error) lower limit plot. ymax y-axis (standard error) upper limit plot. xlab Label x-axis (point estimate). ylab Label y-axis (standard error).","code":""},{"path":"https://mayamathur.github.io/PublicationBias/reference/significance_funnel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make significance funnel plot — significance_funnel","text":"default (plot_pooled = TRUE), also plots pooled point estimate within studies, supplied user est_all (black diamond), within nonaffirmative studies, supplied user est_worst (gray diamond). user can calculate est_all est_worst using choice meta-analysis model. instead supplied plot_pooled = TRUE, pooled estimates automatically calculated using fixed-effects (.k.. \"common-effect\") model.","code":""},{"path":"https://mayamathur.github.io/PublicationBias/reference/significance_funnel.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Make significance funnel plot — significance_funnel","text":"Mathur MB, VanderWeele TJ (2020). “Sensitivity analysis publication bias meta-analyses.” Journal Royal Statistical Society: Series C (Applied Statistics), 69(5), 1091--1119.","code":""},{"path":"https://mayamathur.github.io/PublicationBias/reference/significance_funnel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make significance funnel plot — significance_funnel","text":"","code":"##### Make Significance Funnel ##### # compute meta-analytic effect sizes for an example dataset require(metafor) dat <- metafor::escalc(measure = \"RR\", ai = tpos, bi = tneg, ci = cpos,                        di = cneg, data = dat.bcg)  # favor_positive = FALSE since we think publication bias is in favor of negative significance_funnel(yi = dat$yi, vi = dat$vi, favor_positive = FALSE)"},{"path":[]},{"path":"https://mayamathur.github.io/PublicationBias/news/index.html","id":"publicationbias-230","dir":"Changelog","previous_headings":"","what":"PublicationBias 2.3.0","title":"PublicationBias 2.3.0","text":"Function argument names consistent related packages. Components common related packages come metabias package (@param docs, returned object structure/class, references). Cleaner structure code, documentation, examples, tests. Package-level docs namespace.","code":""}]
